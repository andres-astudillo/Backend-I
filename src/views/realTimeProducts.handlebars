<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en Tiempo Real</title>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>

    <!-- Lista de productos -->
    <h2>Lista de Productos</h2>
    <ul id="productList">
        {{#each products}}
            <li>{{this.title}} - ${{this.price}} (ID: {{this.id}})</li>
        {{/each}}
    </ul>

    <!-- Formulario para agregar un producto -->
    <h2>Agregar Producto</h2>
    <form id="addProductForm">
        <input type="text" id="productTitle" placeholder="Título del producto" required>
        <input type="number" id="productPrice" placeholder="Precio del producto" required>
        <button type="submit">Agregar</button>
    </form>

    <!-- Formulario para modificar un producto -->
    <h2>Modificar Producto</h2>
    <form id="updateProductForm">
        <input type="text" id="updateProductId" placeholder="ID del producto" required>
        <input type="text" id="updateProductTitle" placeholder="Nuevo título" required>
        <input type="number" id="updateProductPrice" placeholder="Nuevo precio" required>
        <button type="submit">Modificar</button>
    </form>

    <!-- Formulario para eliminar un producto -->
    <h2>Eliminar Producto</h2>
    <form id="deleteProductForm">
        <input type="text" id="deleteProductId" placeholder="ID del producto" required>
        <button type="submit">Eliminar</button>
    </form>

    <!-- Incluir el cliente de Socket.io -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io(); // Conectar al servidor WebSocket

        // Obtener referencias a los formularios
        const addProductForm = document.getElementById('addProductForm');
        const updateProductForm = document.getElementById('updateProductForm');
        const deleteProductForm = document.getElementById('deleteProductForm');
        const productList = document.getElementById('productList');

        // Función para actualizar la lista de productos
        const updateProductList = (products) => {
            productList.innerHTML = ''; // Limpiar la lista
            products.forEach(product => {
                const li = document.createElement('li');
                li.textContent = `${product.title} - $${product.price} (ID: ${product.id})`;
                productList.appendChild(li);
            });
        };

        // Escuchar eventos del servidor para actualizar la lista de productos
        socket.on('updateProducts', (products) => {
            updateProductList(products);
        });

        // Enviar un nuevo producto al servidor
        addProductForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const productTitle = document.getElementById('productTitle').value;
            const productPrice = document.getElementById('productPrice').value;

            // Emitir el evento 'newProduct' al servidor
            socket.emit('newProduct', { title: productTitle, price: productPrice });

            // Limpiar el formulario
            addProductForm.reset();
        });

        // Modificar un producto existente
        updateProductForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const productId = document.getElementById('updateProductId').value;
            const productTitle = document.getElementById('updateProductTitle').value;
            const productPrice = document.getElementById('updateProductPrice').value;

            // Emitir el evento 'updateProduct' al servidor
            socket.emit('updateProduct', { id: productId, title: productTitle, price: productPrice });

            // Limpiar el formulario
            updateProductForm.reset();
        });

        // Eliminar un producto
        deleteProductForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const productId = document.getElementById('deleteProductId').value;

            // Emitir el evento 'deleteProduct' al servidor
            socket.emit('deleteProduct', productId);

            // Limpiar el formulario
            deleteProductForm.reset();
        });
    </script>
</body>
</html>